plugins {
    id 'java'
    id 'idea' // to generate IntelliJ IDEA project files
    id 'jacoco' // Code Coverage
    id "org.owasp.dependencycheck" version "5.2.1" // CVE Checking
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.9'
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'org.apache.kafka:kafka-streams:2.3.0'
    implementation 'org.slf4j:slf4j-api:1.7.28'
    testImplementation 'ch.qos.logback:logback-core:1.2.3'
    testImplementation 'ch.qos.logback:logback-classic:1.2.3'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.5.1'
    testImplementation 'org.apache.kafka:kafka-streams-test-utils:2.3.0'
}

tasks.withType(JavaCompile){
    options.compilerArgs += ["-Xlint:unchecked", "-Xlint:deprecation", "-Xdiags:verbose"]
}

/************************
 * Testing configuration
 ************************/

// Configuration for standard test task
test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }

    reports{
        html.destination file("${buildDir}/reports/tests/html")
        junitXml.destination file("${buildDir}/reports/tests/xml")
    }
}

// Test task run by CI
task testCi {
    dependsOn test, jacocoTestReport, jacocoTestCoverageVerification
}

/***********************
 * JaCoCo Configuration
 ***********************/

jacoco{
    reportsDir = file("${buildDir}/reports/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination file("${jacoco.reportsDir}/results.xml")
        html.enabled true
        html.destination file("${jacoco.reportsDir}/html")
    }
}

jacocoTestCoverageVerification {
    mustRunAfter jacocoTestReport
    violationRules {
        rule {
            limit {
                minimum = 0.9
            }
        }
    }
}

/**************************
 * CVE Check Configuration
 **************************/
dependencyCheck {
    formats = ['XML', 'HTML']
    outputDirectory = file("$buildDir/reports/CVEs")
}
